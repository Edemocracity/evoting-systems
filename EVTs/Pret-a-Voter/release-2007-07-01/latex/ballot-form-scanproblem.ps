%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95b Copyright 2005 Radical Eye Software
%%Title: ballot-form-scanproblem.dvi
%%CreationDate: Sat Feb 24 10:29:29 2007
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: CMSSBX10 CMSS12
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe -t A4 ballot-form-scanproblem.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2007.02.24:1011
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: dashed-.eps 0 0
/dashed-.eps-data
currentfile
<< /Filter /SubFileDecode
/DecodeParms << /EODCount 0 /EODString (*HA-EOD-??3.1416926!!*) >>
>> /ReusableStreamDecode filter
%%BeginDocument: dashed-.eps

%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 38 371 305 790 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: digitblank-dashed.eps
%%CreationDate: Thu Feb 01 18:42:51 2007
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Version 13.0.0.576
%Color profile:  Generic offset separations profile
/CorelIsEPS true def
%%BeginResource: procset wCorel3Dict 3.0 0
/wCorel3Dict 300 dict def wCorel3Dict begin
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/separate_color{
SepMode_5 0 ne{[exch/colorarray_sep exch def/ink_num -1 def colorarray_sep
length 6 idiv 1 gt{colorarray_sep get_devicen_color_names dup length 1 sub 0 1
3 -1 roll{exch dup 3 -1 roll dup 3 1 roll get CurrentInkName_5 eq{/ink_num exch
def}{pop}ifelse}for pop ink_num -1 ne{colorarray_sep ink_num
get_devicen_color_spec aload pop pop SepsColor not{pop pop pop pop 1 0 0 0 5 -1
roll}if null}{0 0 0 0 0 null}ifelse}{colorarray_sep 5 get $ink_5 4 eq{
CurrentInkName_5 eq{colorarray_sep aload pop pop SepsColor not{pop pop pop pop
0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{colorarray_sep 0 get colorarray_sep
$ink_5 1 add get 3 -1 roll null eq{0 0 0 4 -1 roll SepsColor{4 $ink_5 1 add
roll}if null}{pop pop 0 0 0 0 0 null}ifelse}ifelse}ifelse]}if}bd
/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5 sub index
/colorarray_sep exch def/ink_num -1 def colorarray_sep get_devicen_color_names
dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3 1 roll get
CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1 ne{[
colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}
def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd
/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK
xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK
pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length
3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div
$dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}
for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4
div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div
$dat 3 index 2 add get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g
255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length ncolors idiv
getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll null 6
array astore currentoverprint set_current_color/$ffpnt xd}bd/currentcmykcolor{
GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd/currentrgbcolor{
currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np exit}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf
$dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix
$SDF{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np exit}ifelse
}ifelse}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S
}bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore
/$Prm xd}bd/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5
(Composite)eq{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{
CurrentInkName_5(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2
def}{CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}
ifelse}ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000
-72000 l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer
/exec cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add
def}bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{
eax}ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}if}ifelse def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse
level2{/@I_2D{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd
/$hei xd/$wid xd $ngx/scanline $wid $bts mul $ncl mul 8 div ceiling cvi string
def/readscanline{currentfile scanline readhexstring pop}bind def level3{[
/DeviceN sNamesDeviceN/DeviceCMYK{tint_params CorelTintTransformFunction}]
setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[nNumInksDeviceN{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0
gt{$hei}{0}ifelse]def/DataSource{readscanline}def currentdict end image}{
/scanline_height $lly $ury sub 1 sub $hei div def/plate_scanline $wid string
def/cmyk_scanline $wid 4 mul string def is_distilling is_rip_separation or{
/bSimDeviceN true def}{/bSimDeviceN false def}ifelse/scanline_img_dict 8 dict
begin/ImageType 1 def/Width $wid def/Height 1 def/BitsPerComponent $bts def
/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1 0 1]}ifelse def/ImageMatrix[$wid 0 0 1
neg 0 1]def/DataSource bSimDeviceN{plate_scanline}{cmyk_scanline}ifelse def
currentdict end def 0 1 $hei 1 sub{@gs/nScanIndex exch def readscanline pop
/$t_lly $ury $lly scanline_height nScanIndex mul sub sub ceiling cvi def
/$t_ury $t_lly scanline_height sub ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{
@gs/nInkIndex exch def 0 1 plate_scanline length 1 sub{dup $ncl mul nInkIndex
add scanline exch get plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex
eq{1.0}{0.0}ifelse}for]/sepTintTransformParams exch def[/Separation
sNamesDeviceN nInkIndex get/DeviceCMYK{sepTintTransformParams aload pop
tint_params CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7
dict def MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index
1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
/disable_raster_output{/@BMP load/old_raster_func exch bind def/@BMP{8 rp/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi string def 0 1 $hei 1 sub{currentfile scanline
readhexstring pop pop pop}for}def}bd/enable_raster_output{/old_raster_func
where{pop/old_raster_func load/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
77.20526 564.97209 258.52904 611.15357 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[5.00000 5.00000 ] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 4.54961 4.54961 0.00000 @w
84.58299 598.97083 m
88.79896 601.94381 93.59603 604.82098 99.05896 607.40872 C
104.42920 609.99817 128.40009 611.24457 170.78372 611.14847 C
213.25720 611.14847 235.79263 610.28589 238.47449 608.65257 C
241.25754 607.12101 243.84444 605.10643 246.33978 602.61477 C
248.92668 600.21780 251.22728 597.43587 253.24186 594.46460 C
255.35197 591.49304 256.79112 589.09209 257.65285 587.27197 C
258.42047 585.54595 258.70649 583.72413 258.42047 581.99726 C
258.13389 580.17827 257.46236 578.54636 256.21342 577.10863 C
254.97071 575.57424 253.14661 573.94346 250.55688 572.31439 C
248.06523 570.58866 243.94195 568.86009 238.18762 567.13748 C
232.53194 565.31509 208.17751 564.64044 165.22101 565.12261 C
122.16983 565.60054 99.44391 566.36844 96.94998 567.32655 C
94.36195 568.38189 91.39096 569.82302 87.93865 571.73868 C
84.48633 573.56050 81.70554 576.62787 79.68869 580.75115 C
77.58085 584.87443 76.81550 588.13569 77.39008 590.72400 C
77.96580 593.21962 80.36504 595.99843 84.58299 598.97083 C
@c
S

@rax %Note: Object
54.49408 374.04369 240.87231 416.13222 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[5.00000 5.00000 ] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 4.54961 4.54961 0.00000 @w
67.41553 403.36781 m
74.22406 410.55704 78.25351 414.39203 79.40296 414.87137 C
80.45631 415.35241 81.89376 415.63984 83.42986 415.92557 C
85.05893 416.21528 106.92283 416.21528 149.01591 415.83061 C
190.43660 416.21528 212.39178 416.02195 214.88825 415.25575 C
217.47600 414.48813 219.68192 413.53087 221.69424 412.47638 C
223.61414 411.32806 227.35191 407.10784 232.72129 399.81742 C
238.18564 392.53294 240.87231 386.96939 240.87231 383.13581 C
240.87231 379.29770 238.28343 376.71109 233.20290 375.37002 C
228.02287 374.02356 199.83203 373.73556 148.44019 374.50658 C
96.75836 373.73556 67.89883 373.92775 61.85480 375.08230 C
55.71893 376.22948 53.41890 379.39635 54.95216 384.66879 C
56.38961 389.84740 60.60983 396.07880 67.41553 403.36781 C
@c
S

@rax %Note: Object
40.56917 401.72939 91.65770 583.24734 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[5.00000 5.00000 ] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 4.54961 4.54961 0.00000 @w
40.56917 413.52803 m
50.54031 521.78230 56.58378 577.49329 58.88268 580.56123 C
61.08860 583.62917 63.86882 584.10624 67.03398 581.80819 C
70.19631 579.60028 74.51320 575.57424 79.97698 569.92082 C
85.34750 564.16450 88.51294 560.71162 89.46992 559.46466 C
90.42888 558.31465 91.09956 556.49424 91.58088 554.00031 C
92.06050 551.60164 90.33364 531.27496 86.40283 492.92079 C
82.47061 454.66469 80.07392 434.04746 79.11666 431.26526 C
78.15628 428.48476 76.91074 426.18416 75.47187 424.36460 C
73.93606 422.63461 70.10050 418.51134 63.96576 412.18838 C
57.73238 405.76167 53.13118 402.40630 50.15650 401.92583 C
47.18494 401.44932 44.88321 401.82973 43.25386 403.17165 C
41.72031 404.51584 40.76220 407.96476 40.56917 413.52803 C
@c
S

@rax %Note: Object
231.37965 387.89320 285.64781 579.36387 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[5.00000 5.00000 ] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 4.54961 4.54961 0.00000 @w
231.37965 423.40535 m
239.62620 508.45493 244.03776 552.17764 244.70759 554.57660 C
245.37855 557.06910 247.48980 559.85017 251.13146 563.20554 C
254.77597 566.46454 259.85849 570.01294 266.18570 573.94545 C
272.51291 577.87824 277.01972 579.69666 279.51307 579.31427 C
282.00756 578.92819 284.01846 577.20501 285.26740 574.23175 C
286.60847 571.25764 284.40312 541.43745 278.65162 484.77061 C
272.99594 428.10350 268.48687 397.51597 265.32340 392.91364 C
262.16135 388.31244 258.89839 386.87329 255.54274 388.59732 C
252.08986 390.22809 247.77411 394.54441 242.31061 401.44932 C
236.84485 408.44636 233.77436 412.47298 233.01014 413.72050 C
232.24167 414.96576 231.85672 416.11861 231.66539 417.26806 C
231.47603 418.32198 231.37965 420.43153 231.37965 423.40535 C
@c
S

@rax %Note: Object
251.63320 584.72532 301.94532 765.91928 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[5.00000 5.00000 ] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 4.54961 4.54961 0.00000 @w
263.69235 739.72885 m
276.92589 755.45518 285.84397 763.98973 290.15802 765.42548 C
294.56872 766.86548 298.21039 765.14117 300.98976 760.53572 C
303.86778 755.83786 300.22384 705.59433 290.34935 609.90009 C
288.81609 599.06721 286.41883 591.68353 283.06035 587.84683 C
279.70639 584.01524 275.86970 583.72413 271.55509 586.89014 C
267.23962 590.05446 263.11776 593.89115 259.28022 598.39483 C
255.44750 602.90249 253.04967 606.45175 251.99348 609.13332 C
250.93956 611.72589 252.18709 633.10734 255.82989 673.37688 C
259.37858 713.64869 261.20126 734.26422 261.29452 735.22488 C
261.39090 736.18101 261.67946 737.04217 262.25490 737.71540 C
262.83090 738.48387 263.30854 739.15540 263.69235 739.72885 C
@c
S

@rax %Note: Object
91.82665 744.68154 278.85260 787.19272 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[5.00000 5.00000 ] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 4.54961 4.54961 0.00000 @w
100.68888 786.90728 m
268.10249 787.19272 L
273.18529 787.19272 276.35159 786.23320 277.59685 784.41250 C
278.74743 782.49458 279.12926 779.99953 278.65162 776.83890 C
278.17115 773.57594 274.43254 767.82274 267.33969 759.48208 C
260.14620 751.13943 255.44750 746.63235 253.14661 745.86728 C
250.74794 745.09682 228.50476 744.90520 186.40885 745.00271 C
141.63137 744.32948 118.42696 744.71499 116.70151 746.15244 C
113.34529 747.49408 108.64687 751.90422 102.51156 759.47981 C
96.46894 767.05597 93.01776 772.61386 92.25156 776.06816 C
91.58088 779.52019 91.67669 782.20602 92.73175 783.93005 C
93.78312 785.75329 96.37483 786.70942 100.68888 786.90728 C
@c
S

@rax %Note: Object
58.88381 597.41575 112.01528 758.20762 @E
/$fm 0 def
0 J 0 j 22.925603954896204 setmiterlimit
[5.00000 5.00000 ] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 4.54961 4.54961 0.00000 @w
58.88381 611.33896 m
69.72038 708.18378 76.33559 756.50910 78.82866 756.31918 C
84.58299 760.24743 91.58088 758.04151 99.63354 749.79751 C
107.68932 741.55124 111.81373 736.37291 112.00365 734.26422 C
112.19669 732.05972 110.18183 712.88220 106.24989 676.63786 C
102.22498 640.39465 98.87017 620.63972 96.37483 617.18797 C
93.88375 613.83203 88.51294 609.51713 80.36334 604.34022 C
72.21118 599.06721 66.65216 596.85846 63.67776 597.53339 C
60.60983 598.29959 59.07515 602.90107 58.88381 611.33896 C
@c
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel3Dict 3.0 0
%%EOF

%%EndDocument
*HA-EOD-??3.1416926!!*
def
/dashed-.eps-form
<< /FormType 1
/BBox [38 371 305 790]
/Matrix [1 0 0 1 0 0]
/PaintProc
{ pop
/ostate save def
/showpage {} def
/setpagedevice /pop load def
dashed-.eps-data 0 setfileposition dashed-.eps-data cvx exec
ostate restore
} bind
>> def
%%EndProcSet
%%BeginProcSet: dashedx.eps 0 0
/dashedx.eps-data
currentfile
<< /Filter /SubFileDecode
/DecodeParms << /EODCount 0 /EODString (*HA-EOD-??3.1416926!!*) >>
>> /ReusableStreamDecode filter
%%BeginDocument: dashedx.eps

%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 37 82 302 347 
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: cross-blank.eps
%%CreationDate: Sat Feb 17 11:27:48 2007
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Version 13.0.0.667
%Color profile:  Generic offset separations profile
/CorelIsEPS true def
%%BeginResource: procset wCorel3Dict 3.0 0
/wCorel3Dict 300 dict def wCorel3Dict begin
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/create_colorarray_from_devicen_params{/ink_names_temp exch def
/tint_params_temp exch def/ink_values_temp exch def[ink_values_temp aload pop
tint_params_temp aload pop ink_names_temp aload pop]}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{
ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop
daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop
daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{
/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch
pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{
/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2
index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3 add get
255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{
1 5 1 roll null 6 array astore currentoverprint set_current_color/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def
/WaldoColor_13 where{pop}{/separate_color{SepMode_5 0 ne{[exch/colorarray_sep
exch def/ink_num -1 def colorarray_sep length 6 idiv 1 gt{colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{colorarray_sep ink_num get_devicen_color_spec aload pop pop SepsColor not{
pop pop pop pop 1 0 0 0 5 -1 roll}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 5 get $ink_5 4 eq{CurrentInkName_5 eq{colorarray_sep aload pop
pop SepsColor not{pop pop pop pop 0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{
colorarray_sep 0 get colorarray_sep $ink_5 1 add get 3 -1 roll null eq{0 0 0 4
-1 roll SepsColor{4 $ink_5 1 add roll}if null}{pop pop 0 0 0 0 0 null}ifelse
}ifelse}ifelse]}if}bd/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5
sub index/colorarray_sep exch def/ink_num -1 def colorarray_sep
get_devicen_color_names dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3
1 roll get CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1
ne{[colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd}ifelse/WaldoColor_13 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa
$dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF
{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np}ifelse}ifelse
}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{
@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring
pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd
/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd
/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode
filter}if}ifelse}ifelse def currentdict end image $SDF{$dsf $dsa $dsp @ss}if
@gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse level2{/@I_2D{@sm @gs @ii @np/$ury xd
/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx/scanline $wid
$bts mul $ncl mul 8 div ceiling cvi string def/readscanline{currentfile
scanline readhexstring pop}bind def level3{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]setcolorspace $llx $lly Tl $urx $llx
sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei
abs def/BitsPerComponent $bts def/Decode[nNumInksDeviceN{0 1}repeat]def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image}{/scanline_height $lly $ury sub 1 sub
$hei div def/plate_scanline $wid string def/cmyk_scanline $wid 4 mul string def
is_distilling is_rip_separation or{/bSimDeviceN true def}{/bSimDeviceN false
def}ifelse/scanline_img_dict 8 dict begin/ImageType 1 def/Width $wid def
/Height 1 def/BitsPerComponent $bts def/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1
0 1]}ifelse def/ImageMatrix[$wid 0 0 1 neg 0 1]def/DataSource bSimDeviceN{
plate_scanline}{cmyk_scanline}ifelse def currentdict end def 0 1 $hei 1 sub{
@gs/nScanIndex exch def readscanline pop/$t_lly $ury $lly scanline_height
nScanIndex mul sub sub ceiling cvi def/$t_ury $t_lly scanline_height sub
ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{@gs/nInkIndex exch def 0 1
plate_scanline length 1 sub{dup $ncl mul nInkIndex add scanline exch get
plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex eq{1.0}{0.0}ifelse
}for]/sepTintTransformParams exch def[/Separation sNamesDeviceN nInkIndex get
/DeviceCMYK{sepTintTransformParams aload pop tint_params
CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx $llx sub
$t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}{COMP 3 eq{/LZWDecode filter}if}
ifelse}ifelse def end/MaskedImageDict 7 dict def MaskedImageDict begin
/ImageType 3 def/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict
ImageDataDict def end MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm
setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid xd/ImageMaskDict 8 dict def
ImageMaskDict begin/ImageType 1 def/Width $mwid def/Height $mhei abs def
/BitsPerComponent $mbts def/DataSource maskstream def/ImageMatrix[$mwid 0 0
$mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]def end}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd/disable_raster_output{/@BMP load
/old_raster_func exch bind def/@BMP{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl
xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts mul $ncl mul 8 div ceiling cvi
string def 0 1 $hei 1 sub{currentfile scanline readhexstring pop pop pop}for
}def}bd/enable_raster_output{/old_raster_func where{pop/old_raster_func load
/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
40.77666 85.57483 298.54431 343.34164 @E
/$fm 1 def
0 J 0 j 22.925585626053735 setmiterlimit
[5.00000 5.00000 ] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 4.54961 4.54961 0.00000 @w
169.66063 257.32630 m
255.46734 343.34164 L
298.54431 300.47443 L
212.52813 214.45880 L
298.54431 128.44233 L
255.46734 85.57483 L
169.66063 171.59102 L
83.64416 85.57483 L
40.77666 128.44233 L
126.58167 214.45880 L
40.77666 300.47443 L
83.64416 343.34164 L
169.66063 257.32630 L
@c
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel3Dict 3.0 0
%%EOF

%%EndDocument
*HA-EOD-??3.1416926!!*
def
/dashedx.eps-form
<< /FormType 1
/BBox [37 82 302 347]
/Matrix [1 0 0 1 0 0]
/PaintProc
{ pop
/ostate save def
/showpage {} def
/setpagedevice /pop load def
dashedx.eps-data 0 setfileposition dashedx.eps-data cvx exec
ostate restore
} bind
>> def
%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSSBX10
%!PS-AdobeFont-1.1: CMSSBX10 1.0
%%CreationDate: 1991 Aug 20 16:43:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSSBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMSSBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /exclam put
dup 46 /period put
dup 63 /question put
dup 73 /I put
dup 84 /T put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-71 -250 1099 780}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0931DC68A9127B5D4E0B0EC0247B
E3E94556B49E4EAF6EA99F1420405194F4D8D644F28FE1F090E80BF5C7D59585
C1AE46D025A67CD5A59ECBDE2AAF87F725A9843589338F85C6176E7F6DAB2032
74BA5CDC992D97660FDB3962D486E2682550AF11DECBCB7F76A28A4177905B2E
F4767CA41528636EA69E80B3A1D33060B9F0250896EF2431F4530727CBBBCB63
5D0CC646976759E52EB09E65B7110CA7A16EB65E0F9DBD26032DBD90A6964D18
6B8BC2030609B972DA155820C9FA67A1A26B9BC9712A9A5AF82343D16BCC542F
890ED28C0BA88F875CE90B1910D1A8FAFA6506F893CA462FDAA96E2A71ABC8A9
A209E7AEB0E41C5A3ADE180857031416EA0123B75292427B282D9C21D765A8C6
82107AF774BAEFA24DCB2DB22410CA3C540C0F9D108362C9C9C81FD259BFA359
D7289FC6963978B46CCE8744FC96D5F106A59311646E6C4C6E520AAAA9719D68
9032C53E3C38EE31A3E9995FB08207BAF83F0FCEF63A536528839428AD1E8A68
F254B65CEC6ADBDBB524D4639388374A5C74C46DF2FD1A30C7B61995ED32BFFB
7F06514E444BB108F3BE17F643D2BBFCB2947FA98789142D00B63105B09B9F24
86E3FAF44F38E9F91A405408481FAD3B8B60381AC52FE674CE23C2E2F688C244
EB64A97378970E7DEAB6FD875ABAA19DFA10D3FFB5D2AEE741A277B5147C8103
1BB179D97426EFA47587DC7D60856B369CC280AFF938EFE801F7140730187895
5E5405EB740BC38B48A7A84437916B550A65C7069CD0940D54DDFCF2EABBAF6B
ED1681F1E44855C53DEDDE611A36118430BBD52A00C12ECAA9229A2127D6C857
702EC3778CA13F05A30F28CE88DFC6A988FBB974B746DE8FE72EF19D25C9C6E9
F32AD32A7A288E59435B51223A27D371BB57AB87DEE5CF0CA722B14685076AB4
374A18B70AFCA024968858A942107842DF78B0595A49F9B235CCE9E23B2B9663
B1C9FBF003CFCCBE1629D25558CD4611670B052114AAAADE945182BFA86C5F47
C0D3F1296E9ED443DD51BD3803AF409A37A49A9B8ED6B784E8E2848D9C242D39
282584E7AC23D8F26D49610DC3B015C29006C1B20F4C269DAA3BB06DDF0DD1C0
614550A225DD625F22CDDDBD2754DF86501918D8B6D404DF54E64FED2CEF47F6
D31FD5D29E3B0BED52970146D5AB576DCC4F9EFA123D0D46E2DAF6913C7D49B4
15DE4E9BC2783639C4CC5025E26BEA9F1F5D4263ECBD4D7C8D5B0E456006B54E
A9BD87C6AC9143922C98DABDEE54687E4D1F78F9D73069CBEBE0AFD9B88C9C73
940A3B0C63F16A03B37309218B673032E7FDC97BC85AB882FB1D02186233DFAD
131702374062CB33D551256AF73FA5EA41653E8758B63616BC8DC696892A9D23
DABE855B9972D5F9232ED4B88FC23854F9D334145D92E5366944B3860020B028
0B199BA8234463DE71F097BE949416046AAE9C9FA65ED78C2BEECE00E47A51CC
DF692AE2C594BA2377CA8C01E84AE12BAB509387B6DD2EF3ED86875DA0188A9A
D659718A58641AB1976F34C26F8E22AC0F8B20609D3C062D4E01188769347CC3
D4814EE93375AD86827AF2558E83A335465226515C87DA42AF7F3DA55BFEC661
5CF6C76DA328C9B96B3EF826F50A527C78CCA4F4972F88194A1CC43043B91F61
5F1FC6A080043804BDCA088AE13C582814249D5344DE3C733852182B3C405B05
2F3F25AE1D3929A357699C4696B5837D293C514F06089730C2F7D8739189DDEB
90CFD46A3EEC63E9677677741A21CA85CC216C55737638EC9B7A101C3EBDF286
B7EA0E41B7A54F930F7800BDC90B88AAB888325335D9E0A08D42B71BACBA70A4
9FA1B0261E314139DA82DC609062356E4F61D99ED814F1A9AE6C75376D832912
090CAC2CAF70CB54C49C2B55933AC0ACCB7F023EEAF2FEF3B1EE33228C35FF27
5A72C950E93FA1A3684B4F50603486C2E13126371D105BAA5C63F0174E43CE98
344D3CC26CDEE4A944B980E1DDB0CE25F9DB68D3EBCE197ED1BA81F1A9FF3D37
0F358954B3E529C8CB265525129F325B6DE4B145C7E1A98B959BF41A3002AA36
5E563BB691457E3A8209A2BDD1DBD99F38058EECF55EFB19FCA53E3D5A15378B
8848D95AA48B7C149881C94703FAA80758BE396BC332117FD106AEB0F3A17E4A
AE067B219EF15C15E8A1BE969C3A259E7C781AFE80C219226D6D684BA5B2175E
0F528238530FC836D838116CD903821BB8565FE3D07B90B0DB2D8896EADB4C6D
8E27EEAF63FD829B03268AEE5BB23103417C14841A3332670A659E2C3DC4457D
B3815FB66C2D312C9A85F0D4791F78A8E9890B23809DC513DC7A7BE54D44640D
52E42F7221F72432A3BF1E9011823118DC93E56C087543FD5E5E60489D5793A4
E2687F5AACBD87816135C70778381B293B9558178E536F57B74D821ABB15A7FF
D88F215B35A85C88E82DAD88EF51246B2FDD1C7EE52EA436504E84508CFAD5F3
B530FA895AF10E9C44F542F4D715D921383F3D9096B092435AAD4F2112C7E03B
5FED57740C39DCF74E26C419AF0AC24A2BC7A9CF9B05B74DE0C15B1C5F40F853
2E5109CCF49909A0005216EBD57FA53D63D5B5DA88D26C922073664ACE0EBDC3
3A0A3CFA1367BD918D1F27B6C0E87FF41B96AFBF096496A99F297E878405A0BA
E823E439D13F5F106E98134B7D081EC06A1130A815934FEDCDDEBD175ADB83BE
514CF06B3A8BD7AF5989A58F0BB5BEC5E01FBAA576C121AA1E549858A7894253
1F6A1BDAA53B17A39DCAB191EEC6E70B6D97923CA0057A3146883E39C008757B
435FBF0A90091F0EB59DDE56A3A6674628EDC5147FBEC4BC61D5E69392546AB7
4F8CD467CBA2E73024FD82079925C9DB5BA85E88F0E0C9857EF2758E0DD0DEFA
707D8ED1B1396F223D696850C6D7EF3961FC1B12149ED7FD321FF181E3946388
09F7361323E2187DEBF6BCB8071A83C1ED0E5A383FC29C0F5D24674C8C3E92FA
16E2EDBCEBCE45FE20D7B5E4506D84F58088C83FA9041FA8F8AC9F5502B13C78
1A016AAEE02568E2AA103EA7130CE1B55B2F191FB8D244B4D64AE9C3AFE449D9
35E721ECD828222D28883D6DD2B02B60376F7B91A646CCFEE4024CB1CBF3BD8F
6FF088803D8FA23F2617DAD286BC9256DB439FD290192B83760EA6037A51DB43
5F2CD393964D541F437032E9FE8711098019EA385E97DE4E6DB1F1BC9F84957E
5FBC0DD4FCFC0FB0C5CDF5B8203DE5187DD6388D79C75681A790242CD28F2E52
82D806F865C6CAB91E5570438C026CCFACEAE0318BAB258C5F92E50D2DCE66A3
85B5CE87B249E60A8635D39AFF8C330DE3FEB9D4C17D064D3663AF71F5F4FA4E
EFB2FDB2985D556BA70F1FC977D774BEA2BC6D5FFC7544005E742931C289CEDC
7CEE3BBBEB3D88A490783FF9AF9A57C944616D7F802A372396C426547081B605
C8D0E0C720704DA06795C5EEB6392E1C9DB64D82B0E71160CC2E27132A8C0AEB
C0C69C45FEBC8F1083AFC1996C89A3E777A8D79177494B20150457F2080FD701
F9884F994B48B0308317D5E742E6EB65152890FE00EB0A8ED860A4183380B213
2E1B5E2CA1D350D20EE0D4425E4E17B4BC3B1C92B39CC421AC401AE228A8328F
5C4E7D918FABBCB4B9439649808F4D5B37EDA09B4D7355C52316B69C348736E1
C4D9C6D864FA3F1DFCD05447A6F78193DE9C10588E203711A81BCD204B0F7C07
4EA79E9198BA9A7BAB169EB297892520C4F699A6C2EBC0C9729C765FB3CEDB8F
905B75F51EE50B5C8D16EA265BB821C9532D228F312616A87AABC50B64CDD77C
21C944B2E8199CDDB1219B0BA9D607421880A081FBE137A66CF0F383F7CFBEC4
1A59B3870A3F343857F970A0CC616AF2F124B21FE861FF8B0A8214F2D1AC4891
515E5442702420D1EE8B40C893C5BBFDE27AA8343A9846918E7A398B122D85A1
D6338B76E6F282AAD99BFC67CEB585B270CF03EEAF2E03006693F9151CC2A5F2
655C97506D2DA5AC79436DDF64EB12AFC83C58134E6F1BDE9041F12A0CC463BD
94ECEB783273BB0D6B44F2A03B852B6FA372AB522A4FB759FC9F64B2D20DA177
D8C5379D71E7183F54B9226D7D4B7C9014C7F209A55FE590344BE580381727FC
AACCCA8A15A759BA5483991C1D6C4720BA741FFCB6664BBB54845F84794A5C99
89CA0804A80B0D2AF5F41E0430C0BA9089F56F4BEF922B8DC852252B659B26DB
3FC2D54658B61878678C870386BDCF7BFD9A706E343FC55A24AD96D3EC92C293
DF64CD35BFCF1A5ACB038C6728B878B834682D4220161A855770ED2249E0F174
A37CB9A98A3CE4B9139B39BCA287DC12984445D707A496568AB0F6D618CB4C28
2C39AF718129D7D59A41A68DA5D584455B893A1D734A7C01651D7AFCEB0D01D1
10469B75B83A6639505A23D0B471250A2076917114F09D89CB446260CAE4E687
AF25BA63F50E992D278A37C09227AB5FF328DE76A54D550A95659997ABC6EE79
29A4FDBD2A01EF6B82C05617082A6D36E644773796EDF333F53E61CF1785A086
730AD9AC990665DFC1CA17872B9294B107B2E292386C992F724A012537879910
CF9C49952203ECCE0CC118AB8A33E08D0F1005526A925925E6F1FAC6EBBF5D6B
1267A6469FF547B2E45D420D0B7CB95530D7D21A84D99680EF375CC06D8C1D9B
FF215C236B2286722AE0F0605BD88AFF9B2EE8AFEA417F3BF806B045BEE36E9E
5FA40D72CA0C283CE89E25FEF68807F418FC907880FAE841643F6935CDA6F57A
CC1DE92C702520993945027F98A11B9DF5F7249B6E116BA66EFBB7F5BCFFDCB1
9F680D153B3CCFC4FE59CAF06FF143E03659B42B9FDE601C5D039505D85CF394
E875CCE0E149C110607E0E5E04CE0FA135A5BF1070CA4E3671D9AC665B0292F8
D4C95C7B990CE2D4F02A78F236679F45CC00E030161FC314F549A2239FB1F552
87F1E7AC1123C1AE4812F983F835F636C279008EE9D4C95ABB327544203A2AAB
E3FDF9E622E28679444E1F91E93ECCC5833F55F085CF18816C624C2D6BD79684
92A31AE7380424CEB4EA8264B0E4C05335A981BA86FAA05832C4BDEF6E4EBDFC
1B6C4FD949E00235ABF22A86FD9020B8050C14347418C12494B433D02BFB5C2C
687C5CF0FE7FE3535CFDC84A19E660AC4CC7A66A0FAE1E79D62DF011B661C546
8FE49DA66C724937E4B0EB38266F3332FF2E47E50A5D202839663B5D062F2FA9
3BA2E118F325864196890E793EEE5F9B05C896ECC2E62916D95547163126459C
142D63CF0E0AD695F4324D1689F46DA56BD81E3A4B7BF1389DCDB6DD54E1AB48
AB6A47650A3A495D7137A726CADCE160419E37BD2ECF4CE9EAC09558D6B03304
400F05C04475197EF1E33299777F883515EFFD2AEDA8ED2CE850A707B04448C8
C7A494C9AB52E1C2A1C7989E9798DDBB4629722CA356781825005AB6A624DEB0
F30C38AF7DC8DD50FDBF09B09EB6BE18AD9F1E922B7822CD0A516030F44B216B
472CE3D2BC3DFEF5B07EBE0A80DEDAE8450F053346DAC6C9BB1ADBAA4A44CD56
8D1C937C49460D12BEE47ACFAA1C96424FE986FB3C9A8B9CE5A732CFB43F3A52
4C1E0AA7D748BD35527C697445346246B37B6BE809FC1470088A8683628F978D
259F236E2972347C5EB1620D4AFB61F67A7CEBB97D77D895B3648E0E9A105296
95D735B1592FF64DD7FA62BF8B25385936221D53A69146760FDDD9054B47D578
674B2238DCBA6AEE0B68DDB746D3C6957D570C2A3F29819683EC25A7401230BF
8EF921506EF6A065AB78AA467B22AF0A7E6B6BC1BAB0AEE53F48AECBDE3D58EF
837CFB55593CA132F8909B11718609AE7B5768E3B5895211D021FAC45B9350AC
4557A8BDDF446ECE00613A051F8BBD5D6903CE420306543A53FCD8B49AAB4E21
2FF21F212C5910F6A75EA4A825AC92F0B71069CADB5F81336CEB7B81DA06010E
AD64D43E823F585D58F3B6DB9915937FE6172026CC790ADCB87D5EA83971EAC5
34787BB465F926C76539231C32CDBE2CFA476C3D337E0F669569D3FA7985CC91
5D1EC252688988B30EAE9EC0AA681006F840C34454DEA03A450427322FEC076F
0ED3C7484ADBA5D4F083E6BCCE5844158A59F7249C73015773E16E89C887313F
7A3EE91196B5D52FFF79CB9F935C70B37C19ED4EA2CD30E948A722B282B96073
B758B5CB90D4F3A7AF635198422283CAB6901B6246E13D4A8CC90BB15D2DA898
FF535CC3F9F73C173C9836A7E99296BC8ED72164E6EA7D71070A90C678641759
477122D9A6B4FA28E260E9188B28253F5E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSS12
%!PS-AdobeFont-1.1: CMSS12 1.0
%%CreationDate: 1991 Aug 20 17:33:47
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSS12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMSS12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 14 /ffi put
dup 44 /comma put
dup 46 /period put
dup 73 /I put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-62 -251 978 758}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B17498276F99362748F6E97327D
7CDA3F5773E01FAD12B7339D4A0993D40A82FA42AAB119589F1D7D60A8AC7A96
BF8C5A08AFE6D427A6FDDEA2FEF0B8ABC37C6DB62C8B4074CD6C385419CC66E5
A4B4C5F902900090EBBDF7AB524205CD9DD9D8B9CB522B8EA97203F0E8FAF683
09750B6C8286AB341F9C240CC02CF7F3E153C3498F16159862CD74C0B6341D3D
57184AB9036EBA94B432D0CAC32240DD569E639B4ACF0BEF07EA19DDF0606551
C8EC84A7A67F3C3F58D3335D7273B51CC2602B63B900D24A6D5A8E766D49EEB0
693796781F0781FF13C5592AA9E071E39034E0742E804ADF14422A734917F0FA
8973A1B9269EA354F8AC75B7284AF48B69529167E55922A20C3106EB6C559E97
7CC1A491C3B41AF834804590554742E742A09A5228F71DAAB9BA2BC3F00FD5C3
B4821FEEDC8B65732409A9C4663FD4C4BC7C864D71F6A6D354ADF71675042DA1
31DC2859AE00363B3EF589B4DAB98D3515FE8176041A332A5647DA8FB9718975
9D0103074531756594D5DD1AF3A9A20F1BE203E28D24DEDA7801AD1CDF96906E
E7049115872C82DD177C3BD765F72E7C15A90CAC968198A38EBA25054D99E7DC
A349E6502C98F894994EF7A0AEED79D1F12EA1B18BF8BC3B5806141C82B201EA
0275585110EA202D7A253F1D6DB449FF2B25F7B8385B1427453717DB07ACC21A
9F5D5DF4AB9D3497C382B1B9761FD0693533650CF014F5D56201767E4CD18A44
A4D912E1A90EF1BEBA702F806652672ACE37D40B4705A4725AC38A8B7D706E84
6D22D811AFF8C8F465D585778EDF77B600F65E332849ECE66FB0EE108B30103C
BDEDE7AEAD0E3A72472B218310D9228AE0BD49120DF3345B692102C7AFA2096D
1DC74AB2CFDE8DFBAA8FE25F920CDE1B93B9769F90FDDDACDBDD31DC4DA80969
3F78333512130F2CA4C2F7BE2BA977D49975189C2EE07F390D87279E938CC350
00606483E82FFAC7A0964FB4BB6C265DCA77F5671488ACA14C79F24BBA175D27
36AD12FE2FA9C5C776DA18AB328DD4A75D2D269837716EA7AAF6109E99D37915
BDF69762F40E08B0284AAAB71DA45F70A6B41034311B249C8017AF6AD4AE3170
124F162C4D8874DF01BFE396363AB89776B3E8E293FB2293F74E89910186A464
B4A8F889612B3FC939812C6AACB58DF00184E98CF39B95869A76CA59153E1D68
AE92E1A8962D5FEFBB33386432AE671C36DC5506A249A6449BFF8D7AAA87857B
80E03F9F9D0C7EE9E62E21BDDB2A2836E2D483C9DFF30A827AE552CBDE8D5E62
0986D1E671D2C891348F1B0555AF129EE5158E08D9CB6502BB294946C09CAB9B
B3906272B434F564A79B82F4D07A7CEFBD1A2DFCF0DD5ACA8B2E802046BEF751
F11025F4BEE54ABA6091D27F8AD50AEA588674CB50040F9C2FE1D36945426193
0CBD87095862B75228CFFFBBDA6D30A54E5099DEC5551D665F961784F50009B5
EDB7964284E048A349E90ABD929EF1FC288E145797ED87C14F7EFA30079D2B4B
73EEC961A28D5BD4A80CE92E737A337A3B3CD51BEDDED12701640FF3BAD92092
B2DBC69491BD7A8B78C211C899E4DEAAF7F8D02B4F4074107275E789638DFDB0
AAF4DD49820CD639AFFB6F360434E1530D47A2915D2710795052D981A1AF33B3
69EB951D52BCA7484ECF0734E95CC965C380FDB856947516D7B2EA01AE05981F
75A067786198673965521CAB98B180345225EB23992AC4A788A100C08DDCCEFB
E7B9A4D0D06E80BA82FFE4EE1DAB88236D07C779D2B785C6F8F3BFB6229B28B1
172CBAAF8D4DAD0AA80C69179CA68BE02E6443B29E9E5498987B673A64347848
8BC3B2E6268B8500308459C1954C6C6F70BFD042A01F8F064AB6E243A7A68AEE
EB182F4A9A4EF90B9BB452A29BA5CC380114BCED40C4602174E6FAFE76F7596C
13650C833E7768DF5346CE9CA4A3C8B8622557CB0D935072A52EE662C1DD90CE
5ABB6E860A83136FB155E77E9EDB76F4DDD23951884474958E7FE2C565F50AFE
F99E3DFB107F94E911B4EC36FBB84E03E520399AC7B8E7ED2316E86C9C8F5630
1D9BE97F4BA2941E9476CDC2666469829F85780FDEB5D7CEFE0617559F2EB701
8D61E93C8359A168A206D016C71ACE0BFD63AA00E4E8276B6055D0EE6BC662BF
F921C458290611B65664E227FBB8B0D4BAFF5F5327A490023C1013615012CB55
6E1A16B3E17B4D9F435FF8E172D323798E22BD350F0582B6470749FCF3EEB45E
75AB1A0449FB18F3801A0F19FEC50B0C4F3F21AA7C502185C93461E5352B1D3D
A2F4D34B771BFFF145F9A67C8CDB5353B0D4D4B92E18932C04F7DAABC90B5876
C260F05CDF51C5ACF32FF63F1ED537BADD956EDE6A8D9E2DFC0783C8C0B04C46
AB6100AF15B13DE71797D65094B84B7B360A4FC0226175BFD63B931D9B933792
D5C39C1DB8E686C3C0D71964B7504EDAA59F7DE1B892075DE6CD3CFB6A2D56B6
89E0CA8379E7F1CF21237C8667780E5053C2C1DB968C93CC725ABFC368259BED
839D4E6F151BCFD0C736B6502E0045EFB323400B66B904CAA097B8B0C4DC20EE
F3E380756F2A10CD674F87FA59AC49C33E7763BF1FED204D3FFAB2CAE2262252
651A15471F4C08FD098CB74916C3E9C9866C1BEF56B2E5E2DFADC728A294EDE9
35D8906F7B0B6A9B660DFBA8111B98E2C748ADC271E3893D296ABC709290B8DC
92EC76495661E72A2FDD7032AE8BAD92E87E634E5450CA13E1854D94415C592A
17783EFB336485D9FE10854D0573485E25F2E904D0A088F573615D2472E6E903
C21492D340112B3F1CEF020811EDE8433A7B79F474D3D833A030F38901F59608
1F343DAD889AFD437B719C0A7E569883BB02B9ED9399D7A898B3CAF9F874F4DE
5EA2D1288A84E5DD4B9E7ABA6282FC843E3AAFAC1FDEA9DE71C65907FE680406
1A57E9DFAF8266258D18BEEF2FA855594CA532B3CC9C3696205571E611842BD9
6F4F1955DE8F4675C400A0C0FBC49927BAE6614941B58D8287025EE3E9FC9A16
1233C6A0C3EDCF488B7EDF2CB992C5320F2253E921409922CC8AB11AA682FACB
17F33A2A74BF426FD7CBDF4E1A8FCE4423627433F32C19FFBBA9ECE79DE0CCCF
94A530C7EDDE8A558DAC10491AD2AE9127C7D8D64AA775992C563729B8417914
E8C8EBCECFB7E00A6F4E769FF3FB649F6996BBC8ADBA78DB73ED24660A8E9B17
0CF55136D72CD3F9E3731BAFDB28B2B654EA3FC501DC20420B212CDF474685F7
CA5E5860EA0CDF0F6C97C51DAFE287871E24A7AE0A0D8C72EC703D47FC64E806
E52C71F2C3BBAB085DF76AD84B84BB3B3618BB0625B301F08922A241744FDB19
E30D698EBFA17D812BC5076F4A8D19E75C4DC961D75769A3110784AE80A56910
FF28EA462D04892F5A471376B7F6A99606A852E4F96260AEC88338A168AF74B3
2AF6DD7A68391BC249194766CD8017B1FCAC2C4D09A99F62F753758807858DCE
5E563E687A6AEC086D3AD673C401B38DF81261DF65639AFC721C99E62100EE34
EF4B905FEFA6BD7F9AAEF68F1B847EA9547674CF30036779BA2333ECE998914F
318677B95429818A96DD8A371F4A000637AD5AFCF0FEC05D6EA515EC54934CA7
87EC6CD81AAF70B6AE6FBE6B44BCDEB146F0CBD0F851C686748AF231A6F74A35
F99863F708EE1DA1C6D918EF599E2C098FEA92814470639F07152FAEF01AB703
3F179D5C9DC98F29DCA9A3AE8EBE2BF3DAD3D735174F006BB59C62ABE5191C04
68236035FA43B60ACFFB34EB709FFC486A7F3623E69C760935B69621444616FE
AC4E2577BEF56C621E0A57D2278184D4C45BDB072E444EA248DD59C0CA0DE757
E24752ADFFC922CA0F470E1A8B0568CA72F9D6B5F240D5198BC8730CE50FE9F3
DD1F450E360B3E7168B1DC2BDC4212592122FC09AE5886C09202D529EE68CDD8
499FE0919DDE775A2CA61E91D8630C498F71D1B2AA45958AC9B2CDE435074B45
7A5EB352E8FDB13EBA81EC8CCBBA5913C7F4472F86369CEC399DDFC1F6914079
547D0AC1DD43BAC225F22EFE52807A29A91BB1B88D77C8DC53CCCDE8A8CAC2FD
1A4F1397BEC184619E959A2F7B9B54D93A63CC66DD04CEDA650D9B24636FE610
ED19CB1CF1F6095B0A1283158026B7814F2954D9DD46B439162F007576FC25CE
B7099B7BF32C23C3EE677D798B61A0C3DA7E167955CA82B5471BB6822491EFA7
44EA4FF760CADB5A3441EAF0DA144D2987AE577A6DF47F99936B5E3A803D1516
AA9B9747136194A30100D7962A87D5C2B43E1304B7D61F020C16DD295DEA0800
20C8D0B2E787CB3AC3B546F6E18AC149A410C20FC4C9A904361496C0EE9E5EC4
6940DC3829443EEA791A96956F1FCE8C1D0ECE3F735E43C4A23217D96E50C1E4
9DEDAB699C4877A2F96C6EFE603048C12E99E3BA451E8D5B3F93E9AC4FECFAF4
6BD0510081549E67F133E621B2DE53F34729DBF3CBAE1E53C576035A1FFC907C
E64678F8A4D1F3166ACA378AF940297F3B8912BA0ABCACF4CAED0ECB0B149AD6
9B9A0310E5B903E02850BCED3FAE00766F5C17C756F5B54EBB41D6B4287F7591
FFBFA67FCAEDC15E424E5B82BC5A50A19B41976A97F93948B7D18D8F3D1728B9
00D046DB74ECFF2E2A29C3E832D388DB6FE8B8C94EF49AEEEB4C07C3FFB54977
CE3F0ED938F55555183FE65F29F6510AE4E90034FAAA901CE111A5C31DA39E2B
4E0A3B28D29CE7949FF994F8EBAB4DA6DF83738D2D76B9D23536CCA2DB18EF26
5FACC22E6FB8F344E61788B936BC315DCD57438A3754666855EAA9360629943D
8E501B5A4E3390FBDAAB9919145E280497B77B6D18BC99EAD25F2130D2EAFAE8
94BA309E010D6D7FCC3C8DA121942A5E8A870F369FC7AFE8FB61E3659B995574
408453AB4696A2232CC1A31000D28AC1334E56953B68F638BA643506E9C1CC10
F32949D42BD02195F7C1703C6C1956723DE20DA2A9CE1504BB4034D9AD66C57F
C9C6F4B8F42B3535C228569208BA47DEBE49639030D4F485500329ED0F6C8FDB
ED5B0B0A2AE1A4E218CA46F8374874839C3DEBFAD3B8E019459042E089B00147
91E76ED5968361DA0AE788BB2AE05B52AD2E76CDE0D76510C623E08D3759CE4E
CCFE7E95BFCF4D8BFF2E8F2A0A6CE23798542BFF5755911D20755241A57DA205
BD7840C5C6287D436AF4478A8641557955DA87D78B87E155017ADDD4D830B657
AA3AE9E104CCB0AD974DAB87FAEB1A2C978B8925B16FCD6EDC6ADB8B2855C02E
23618377429C89CA6CC03DAB7753FFE688B4DD7091FF184C047C3C24C7828AAD
A1A36956B7B2B474E5EDE937378034C7B3998B83E46358950EE431F40C1D9E7B
00E17F0C45DDC7598C0A9A1786BA7EB31108BD7FB0B8E86F4434070C0D9D77DA
81C39019D173F4FBD4DF25844DA52A3BB1C6AB9251F59DA44A9FDC6CDA7EED2F
3DD13D0108E733DB5A676533898B5982EBEE3C50C3CA47981C3BB1CD86A02C2F
7504442938A4EFC11E9E15547EF96F4E0A7735A491E20ABF2002C4FAABF44F4B
C8CE0EE17D65EC56B7844104952BE429E5779582A8314C68E12F3230298C6919
70DE2B58121F1773508B7AA164322B1DAFBDC94FB35DA63118D0414B22C58CDB
60EF745A5B51165891068605F34151E2B30FBFD8E95A9FAEC38BF3DDEF2024F9
FC97CC61E1E4BA8A91819B285708C830E0BF317EC6F2FB28FBF794C27EB3E610
DA58DD808247794419FA9D427024F6E9EADEE42DA54FEF248F98417FA695B0FE
806670F0DC429CB5D9B28430865D842431F925B516E0D40DB6CE9AE27648C5C7
2CD2635414C4708088DD807EAA768B991AEBC1A3E25CB02CB3FFEFF13781A059
8C790EDF3FF124F0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39139632 55387786 1000 600 600
(ballot-form-scanproblem.dvi) @start /Fa 134[60 2[60
67 48 50 45 1[67 66 67 104 3[31 67 1[40 61 67 58 67 63
12[88 37[37 46[{}20 119.552 /CMSSBX10 rf /Fb 134[54 54
80 54 60 42 45 40 1[60 59 60 93 28 57 1[28 60 59 36 52
60 52 60 56 9[110 2[80 10[32 26[33 1[33 29[95 1[63 68
11[{}31 119.552 /CMSS12 rf /Fc 134[72 1[107 1[80 58 60
53 1[80 79 80 124 37 2[37 80 1[48 73 80 70 80 75 7[105
1[149 13[47 9[75 29[53 33[{}24 143.462 /CMSSBX10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black -482 -382 a Fc(Y)-13
b(our)54 b(ballot)e(fo)l(rm)h(could)h(not)f(b)t(e)g(scanned!)-482
-133 y Fb(W)m(e)39 b(had)g(di\016cult)m(y)f(in)g(scanning)h(y)m(our)e
(ballot)h(fo)m(rm)g(and)h(interp)m(reting)e(it.)52 b(This)38
b(indicates)h(that)g(either)g(y)m(our)-482 16 y(ballot)e(fo)m(rm)e(w)m
(as)i(to)s(o)g(badly)g(damaged)g(to)g(b)s(e)h(p)m(rop)s(erly)e(p)m(ro)s
(cessed,)g(o)m(r)h(something)f(has)h(gone)g(badly)f(wrong)-482
166 y(with)j(the)g(machine.)-482 920 y Fc(Why)53 b(has)h(this)f(happ)t
(ened?)-482 1169 y Fb(The)39 b(most)f(lik)m(ely)f(reason)h(is)h(that)g
(the)h(ba)m(r)e(co)s(de)h(in)g(the)g(top)g(right)f(has)h(b)s(een)h
(written)e(on)h(o)m(r)f(damaged)g(in)-482 1319 y(some)g(w)m(a)m(y)-10
b(.)51 b Fa(The)43 b(info)l(rmation)g(in)g(this)h(ba)l(r)g(co)t(de)g
(is)f(needed)i(to)f(p)l(ro)t(cess)g(y)l(our)g(vote.)51
b Fb(If)39 b(y)m(ou)f(have)-482 1468 y(dra)m(wn)g(on)h(it,)f(y)m(ou)g
(will)f(need)j(to)e(\014ll)g(in)h(another)f(ballot)g(fo)m(rm.)-482
1717 y(The)h(p)m(roblem)e(can)i(also)f(o)s(ccur)h(if)g(y)m(ou)e(have)i
(made)g(other)f(ma)m(rks)g(on)h(y)m(our)f(fo)m(rm)f(that)j(give)d(the)j
(scanning)-482 1867 y(soft)m(w)m(a)m(re)d(di\016cult)m(y)h(in)h(lo)s
(cating)e(the)j(di\013erent)f(pa)m(rts)g(of)f(the)h(fo)m(rm.)50
b(If)39 b(y)m(ou)f(have)g(made)h(ma)m(rks)f(on)h(the)-482
2016 y(ballot)f(fo)m(rm)g(other)g(than)i(in)e(the)i(voting)d(b)s(o)m
(xes,)h(y)m(ou)g(will)f(need)i(to)g(\014ll)e(in)i(another)g(ballot)f
(fo)m(rm.)-482 2771 y Fc(What)54 b(do)f(I)g(do)g(no)l(w?)-482
3020 y Fb(In)39 b(o)m(rder)f(to)h(b)s(e)g(able)g(to)g(vote,)f(y)m(ou)f
(need)j(to)e(tak)m(e)h(the)h(o)m(riginal)c(ballot)i(fo)m(rm)f(and)j
(this)e(p)m(roblem)g(rep)s(o)m(rt)g(to)-482 3170 y(the)h(desk.)52
b(They)38 b(will)f(exchange)i(the)g(ballot)f(fo)m(rm)g(and)h(p)m
(roblem)e(rep)s(o)m(rt)h(fo)m(r)g(another)h(one)g(with)f(which)g(y)m
(ou)-482 3319 y(can)h(vote.)-482 3568 y(If)g(the)g(p)m(roblem)e
(recurs,)h(it)h(ma)m(y)f(indicate)h(a)g(ha)m(rdw)m(a)m(re)e(fault.)52
b(In)39 b(this)f(case,)h(the)g(technical)g(team)g(will)e(need)-482
3717 y(to)i(investigate)f(the)h(p)m(roblem.)p Black Black
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
