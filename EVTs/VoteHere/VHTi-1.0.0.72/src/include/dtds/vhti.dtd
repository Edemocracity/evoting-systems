<!--  -->
<!-- This material is subject to the VoteHere Source Code Evaluation -->
<!-- License Agreement ("Agreement").  Possession and/or use of this -->
<!-- material indicates your acceptance of this Agreement in its entirety. -->
<!-- Copies of the Agreement may be found at www.votehere.net. -->
<!--  -->
<!-- Copyright 2004 VoteHere, Inc.  All Rights Reserved -->
<!--  -->
<!-- You may not download this Software if you are located in any country -->
<!-- (or are a national of a country) subject to a general U.S. or -->
<!-- U.N. embargo or are deemed to be a terrorist country (i.e., Cuba, -->
<!-- Iran, Iraq, Libya, North Korea, Sudan and Syria) by the United States -->
<!-- (each a "Prohibited Country") or are otherwise denied export -->
<!-- privileges from the United States or Canada ("Denied Person"). -->
<!-- Further, you may not transfer or re-export the Software to any such -->
<!-- country or Denied Person without a license or authorization from the -->
<!-- U.S. government.  By downloading the Software, you represent and -->
<!-- warrant that you are not a Denied Person, are not located in or a -->
<!-- national of a Prohibited Country, and will not export or re-export to -->
<!-- any Prohibited Country or Denied Party. -->
<!-- Questions about VoteHere's VHTi DTD may be addressed to: vhtifeedback@votehere.com -->
<!-- Alphabet Encoding -->
<!ELEMENT AlphabetEncoding (#PCDATA)>


<!-- Answer Partial Decrypt -->
<!ELEMENT AnswerPartialDecrypt (XValue, ConstantVal, FunctionVal)>
<!ELEMENT ConstantVal (#PCDATA)>
<!ATTLIST ConstantVal
Encoding CDATA #REQUIRED>
<!ELEMENT FunctionVal (#PCDATA)>
<!ATTLIST FunctionVal
Encoding CDATA #REQUIRED>

<!-- Answer Reference -->
<!ELEMENT AnswerReference (#PCDATA)>


<!-- Answer Skeleton -->
<!ELEMENT AnswerSkeleton (AnswerTextStructure?)>
<!ATTLIST AnswerSkeleton
AnswerReference CDATA #IMPLIED >

<!-- Authority -->
<!ELEMENT Authority (Certificate, AuthorityEvaluationPoint)>
<!ATTLIST Authority
AuthFingerprint CDATA #REQUIRED>
<!ELEMENT AuthorityEvaluationPoint (#PCDATA)>
<!ATTLIST AuthorityEvaluationPoint
Encoding CDATA #REQUIRED>


<!-- Authority Partial Decrypt -->
<!ELEMENT AuthorityPartialDecrypt (CommittedAuthority, BallotBoxPartialDecrypt)>


<!-- Authority Partial Decrypts -->
<!ELEMENT AuthorityPartialDecrypts (AuthorityPartialDecrypt+)>


<!-- Authority Set -->
<!ELEMENT AuthoritySet (Authority+)>


<!-- Ballot Answer -->
<!ELEMENT BallotAnswer (AnswerTextStructure, AnswerMark)>
<!ATTLIST BallotAnswer
AnswerReference CDATA #REQUIRED>
<!ELEMENT AnswerTextStructure (#PCDATA)>
<!ELEMENT AnswerMark (#PCDATA)>
<!ATTLIST AnswerMark
Encoding CDATA #REQUIRED>


<!-- Ballot Partial Decrypt -->
<!ELEMENT BallotPartialDecrypt (AnswerPartialDecrypt+)>


<!-- Ballot Box Partial Decrypt -->
<!ELEMENT BallotBoxPartialDecrypt (BallotPartialDecrypt*)>


<!-- Ballot Question -->
<!ELEMENT BallotQuestion (QuestionTextStructure, BallotAnswer+)>
<!ATTLIST BallotQuestion
QuestionReference CDATA #REQUIRED>


<!-- Ballot Questions -->
<!ELEMENT BallotQuestions (BallotQuestion+)>


<!-- Ballot Sequence Number -->
<!ELEMENT BallotSequenceNumber (#PCDATA)>
<!ATTLIST BallotSequenceNumber
Encoding CDATA #REQUIRED>


<!-- Ballot Sequence Numbers -->
<!ELEMENT BallotSequenceNumbers (BallotSequenceNumber+)>


<!-- Ballot Skeleton -->
<!ELEMENT BallotSkeleton (ElectionID, PrecinctID, QuestionSkeleton+, BallotTextStructure?)>


<!-- Blank Ballot -->
<!ELEMENT BlankBallot (ElectionID, PrecinctID, CryptoElectionParameters, BallotQuestion+, BallotTextStructure)>
<!ELEMENT BallotTextStructure (#PCDATA)>


<!-- Broadcast Values -->
<!ELEMENT BroadcastValues (BroadcastValue+)>


<!-- Broadcast Value -->
<!ELEMENT BroadcastValue (BigTheta+, Omega, Something)>
<!ATTLIST BroadcastValue
AuthFingerprint CDATA #REQUIRED>
<!ELEMENT BigTheta (#PCDATA)>
<!ATTLIST BigTheta
Order CDATA #REQUIRED
Encoding CDATA #REQUIRED>
<!ELEMENT Omega (#PCDATA)>
<!ATTLIST Omega
Encoding CDATA #REQUIRED>
<!ELEMENT Something (#PCDATA)>
<!ATTLIST Something
Encoding CDATA #REQUIRED>


<!-- BSN Dictionary Commitments -->
<!ELEMENT BSNDictionaryCommitments (BallotSequenceNumber, DictionaryCommitment+)>


<!-- BSN Revealed Dictionary Secrets -->
<!ELEMENT BSNRevealedDictionarySecrets (BallotSequenceNumber, RevealedDictionarySecret+)>


<!-- Certificate -->
<!-- This probably needs more information, such as a human-readable -->
<!-- string indicating who made the signatures -->
<!ELEMENT Certificate (GeneralPurposePublicKey, Signature*)>


<!-- Check Results -->
<!ELEMENT CheckResults (#PCDATA)>


<!-- Clear Text Ballot -->
<!-- Secret --> <!ELEMENT ClearTextBallot (AnswerReference+)>


<!-- Clear Text Ballots -->
<!ELEMENT ClearTextBallots (ClearTextBallot+)>


<!-- Committed Authority -->
<!ELEMENT CommittedAuthority (Authority, KeyShareCommitment)>


<!-- Committed Authority Set -->
<!ELEMENT CommittedAuthoritySet (CommittedAuthority+)>


<!-- Crypto Election Parameters -->
<!ELEMENT CryptoElectionParameters (CryptoGroupParameters,
                                    CryptoTabulationParameters)>


<!-- Crypto Group Parameters -->
<!ELEMENT CryptoGroupParameters (ElectionModulus, ElectionSubgroupModulus, ElectionSubgroupMember)>
<!ELEMENT ElectionModulus (#PCDATA)>
<!ATTLIST ElectionModulus
Encoding CDATA #REQUIRED>
<!ELEMENT ElectionSubgroupModulus (#PCDATA)>
<!ATTLIST ElectionSubgroupModulus
Encoding CDATA #REQUIRED>
<!ELEMENT ElectionSubgroupMember (#PCDATA)>
<!ATTLIST ElectionSubgroupMember
Encoding CDATA #REQUIRED>


<!-- Crypto Tabulation Parameters -->
<!ELEMENT CryptoTabulationParameters (ElectionPublicKey,
                                      NumAuth, Threshold, KeyShareCommitment+)>
<!ELEMENT ElectionPublicKey (#PCDATA)>
<!ATTLIST ElectionPublicKey
Encoding CDATA #REQUIRED>

<!-- NumAuth is the number of Authority entities -->
<!-- participating in the election               -->
<!ELEMENT NumAuth (#PCDATA)>
<!-- Threshold is the number of Authorities      -->
<!-- participating in keysharing                 -->
<!ELEMENT Threshold (#PCDATA)>

<!-- Dictionary Commitment -->
<!ELEMENT DictionaryCommitment (#PCDATA)>
<!ATTLIST DictionaryCommitment
Encoding CDATA #REQUIRED>


<!-- Dictionary Question  -->
<!ELEMENT DictionaryQuestion (DictionaryVerificationCode+)>
<!ATTLIST DictionaryQuestion
QuestionReference CDATA #REQUIRED>


<!-- Dictionary Verification Code  -->
<!ELEMENT DictionaryVerificationCode (#PCDATA)>
<!ATTLIST DictionaryVerificationCode
AnswerReference CDATA #REQUIRED
Encoding CDATA #REQUIRED>


<!-- Election ID -->
<!ELEMENT ElectionID (#PCDATA)>


<!-- ElGamal Pair -->
<!ELEMENT ElGamalPair (XValue, YValue)>
<!ELEMENT XValue (#PCDATA)>
<!ATTLIST XValue
Encoding CDATA #REQUIRED>
<!ELEMENT YValue (#PCDATA)>
<!ATTLIST YValue
Encoding CDATA #REQUIRED>

<!-- Encrypted Data -->
<!ELEMENT EncryptedData (InitializationVector, EncryptedSessionKey, CipherText)>
<!ELEMENT InitializationVector (#PCDATA)>
<!ELEMENT EncryptedSessionKey (#PCDATA)>
<!ELEMENT CipherText (#PCDATA)>


<!-- EncryptionPrivateKey -->
<!-- Secret --> <!ELEMENT EncryptionPrivateKey (#PCDATA)>


<!-- EncryptionPublicKey -->
<!ELEMENT EncryptionPublicKey (#PCDATA)>


<!-- Error Structure -->
<!ELEMENT ErrorStructure (#PCDATA)>


<!-- General Purpose Private Key -->
<!-- Secret --> <!ELEMENT GeneralPurposePrivateKey (IdentInfo, SigningPrivateKey, EncryptionPrivateKey)>


<!-- General Purpose Public Key -->
<!ELEMENT GeneralPurposePublicKey  (IdentInfo, SigningPublicKey , EncryptionPublicKey )>


<!-- Identification Information -->
<!ELEMENT IdentInfo (#PCDATA)>


<!-- Key Generation Parameters -->
<!ELEMENT KeyGenParameters (CryptoGroupParameters, NumAuth, Threshold)>


<!-- Key Share Commitment -->
<!ELEMENT KeyShareCommitment (#PCDATA)>
<!ATTLIST KeyShareCommitment
AuthFingerprint CDATA #REQUIRED
Encoding CDATA #REQUIRED>

<!-- Modular Integer -->
<!ELEMENT ModularInt (#PCDATA)>


<!--Pairwise Secrets -->
<!-- Secret --> <!ELEMENT PairwiseSecrets (PairwiseSecret+)>


<!-- Pairwise Secret -->
<!-- Secret --> <!ELEMENT PairwiseSecret (#PCDATA)>
<!ATTLIST PairwiseSecret
FromID CDATA #REQUIRED
ToID CDATA #REQUIRED
Encoding CDATA #REQUIRED>


<!-- Password -->
<!-- A secret key used for data encryption -->
<!ELEMENT Password (#PCDATA)>


<!-- Password Encrypted Data -->
<!-- Data whose content is protected by a password -->
<!ELEMENT PasswordEncryptedData (CipherText)>


<!-- Partially Decrypted Ballot Box -->
<!ELEMENT PartiallyDecryptedBallotBox (RawBallotBox, AuthorityPartialDecrypts)>


<!-- Permutation -->
<!ELEMENT Permutation (#PCDATA)>
<!ATTLIST Permutation
Size CDATA #REQUIRED>


<!-- PrecinctID -->
<!ELEMENT PrecinctID (#PCDATA)>


<!-- Pre-Verification Code -->
<!ELEMENT PreVerificationCode (#PCDATA)>


<!-- Pre-Verification Codes -->
<!ELEMENT PreVerificationCodes (PreVerificationCode+)>


<!-- Pre Verification Code Box -->
<!ELEMENT PreVerificationCodeBox (RawBallotBox)>


<!-- Pre Verification Code Boxes -->
<!ELEMENT PreVerificationCodeBoxes (PreVerificationCodeBox+)>


<!-- Question Reference -->
<!ELEMENT QuestionReference (#PCDATA)>


<!-- Question Skeleton -->
<!ELEMENT QuestionSkeleton (QuestionTextStructure?, AnswerSkeleton*)>
<!ATTLIST QuestionSkeleton
QuestionReference CDATA #IMPLIED
NumAns CDATA #IMPLIED>


<!-- Question Text Structure -->
<!ELEMENT QuestionTextStructure (#PCDATA)>


<!-- Random Bits -->
<!ELEMENT RandomBits (#PCDATA)>
<!ATTLIST RandomBits
Encoding CDATA #REQUIRED>


<!-- Random Block -->
<!-- Secret --> <!ELEMENT RandomBlock (#PCDATA)>
<!ATTLIST RandomBlock
Encoding CDATA #REQUIRED>


<!-- Random IJ State -->
<!-- Secret --> <!ELEMENT RandomIJState (RandomSeedKey)>
<!ATTLIST RandomIJState
SourceType CDATA #REQUIRED>


<!-- RandomSeedKey -->
<!-- Secret --> <!ELEMENT RandomSeedKey (#PCDATA)>


<!-- RandomSeedKeys -->
<!-- Secret --> <!ELEMENT RandomSeedKeys (RandomSeedKey+)>


<!-- Random State -->
<!-- Secret --> <!ELEMENT RandomState (RandomSeedKey, RandomBlock)>
<!ATTLIST RandomState
SourceType CDATA #REQUIRED>


<!-- Raw Ballot Box -->
<!ELEMENT  RawBallotBox (RawVotedBallot)* >


<!-- Raw Clear Text Ballot -->
<!ELEMENT RawClearTextBallot (AnswerMark+)>


<!-- Raw Clear Text Ballots -->
<!ELEMENT RawClearTextBallots (RawClearTextBallot+)>


<!-- Raw Voted Ballot -->
<!ELEMENT RawVotedBallot (ElGamalPair)+ >


<!-- Results -->
<!-- The specification is left to the application. -->
<!ELEMENT Results (#PCDATA)>


<!-- Return Code -->
<!ELEMENT ReturnCode (#PCDATA)>


<!-- Revealed Dictionary Secret -->
<!ELEMENT RevealedDictionarySecret (#PCDATA)>
<!ATTLIST RevealedDictionarySecret
Encoding CDATA #REQUIRED>


<!-- Secret Coefficients -->
<!-- Secret --> <!ELEMENT SecretCoefficients (SmallTheta+)>
<!ATTLIST SecretCoefficients
AuthFingerprint CDATA #REQUIRED>
<!-- Secret --> <!ELEMENT SmallTheta (#PCDATA)>
<!ATTLIST SmallTheta
Order CDATA #REQUIRED
Encoding CDATA #REQUIRED>

<!-- Secret Share -->
<!-- Secret --> <!ELEMENT SecretShare (#PCDATA)>
<!ATTLIST SecretShare
Encoding CDATA #REQUIRED>


<!-- Seed Parameters -->
<!ELEMENT SeedParameters (NumAuth, Threshold)>


<!-- Shuffle Validity Proofs -->
<!ELEMENT ShuffleValidityProofs (ShuffleValidityProof+)>


<!-- Shuffle Validity Proof -->
<!ELEMENT ShuffleValidityProof (U_Values, W_Values, A_Values, C_Values,
                                Lambda_1, Lambda_2, sigma_values, tau,
                                SimpleShuffleValidityProof)>
<!ELEMENT U_Values (UValue*)>
<!ELEMENT UValue (#PCDATA)>
<!ATTLIST UValue
Encoding CDATA #REQUIRED>
<!ELEMENT W_Values (WValue*)>
<!ELEMENT WValue (#PCDATA)>
<!ATTLIST WValue
Encoding CDATA #REQUIRED>
<!ELEMENT A_Values (AValue*)>
<!ELEMENT AValue (#PCDATA)>
<!ATTLIST AValue
Encoding CDATA #REQUIRED>
<!ELEMENT C_Values (CValue*)>
<!ELEMENT CValue (#PCDATA)>
<!ATTLIST CValue
Encoding CDATA #REQUIRED>
<!ELEMENT Lambda_1 (#PCDATA)>
<!ATTLIST Lambda_1
Encoding CDATA #REQUIRED>
<!ELEMENT Lambda_2 (#PCDATA)>
<!ATTLIST Lambda_2
Encoding CDATA #REQUIRED>
<!ELEMENT sigma_values (sigma*)>
<!ELEMENT sigma (#PCDATA)>
<!ATTLIST sigma
Encoding CDATA #REQUIRED>
<!ELEMENT tau (#PCDATA)>
<!ATTLIST tau
Encoding CDATA #REQUIRED>

<!-- Simple Shuffle Validity Proof Original
// <!ELEMENT SimpleShuffleValidityProof (BigGamma, Xbar_kp1, Ybar_kp1, Theta, alpha_values)>
// <!ELEMENT BigGamma (#PCDATA)>
// <!ATTLIST BigGamma
// Encoding CDATA #REQUIRED>
// <!ELEMENT Xbar_kp1 (#PCDATA)>
// <!ATTLIST Xbar_kp1
// Encoding CDATA #REQUIRED>
// <!ELEMENT Ybar_kp1 (#PCDATA)>
// <!ATTLIST Ybar_kp1
// Encoding CDATA #REQUIRED>
// <!ELEMENT Theta (#PCDATA)>
// <!ATTLIST Theta
// Encoding CDATA #REQUIRED>
// <!ELEMENT alpha_values (alpha+)>
// <!ELEMENT alpha (#PCDATA)>
// <!ATTLIST alpha
// Encoding CDATA #REQUIRED -->

<!-- Simple Shuffle Validity Proof Short Version
// <!ELEMENT SimpleShuffleValidityProof (GValue, BigGamma, c_hash, alpha_values)>
// <!ELEMENT GValue (#PCDATA)>
// <!ATTLIST GValue
// Encoding CDATA #REQUIRED>
// <!ELEMENT c_hash (#PCDATA)>
// <!ATTLIST c_hash
// Encoding CDATA #REQUIRED -->

<!-- Simple Shuffle Validity Proof Long Version -->
<!ELEMENT SimpleShuffleValidityProof (GValue, BigGamma, Theta_values, alpha_values)>
<!ELEMENT GValue (#PCDATA)>
<!ATTLIST GValue
Encoding CDATA #REQUIRED>
<!ELEMENT BigGamma (#PCDATA)>
<!ATTLIST BigGamma
Encoding CDATA #REQUIRED>
<!ELEMENT Theta_values (Theta_value*)>
<!ELEMENT Theta_value (#PCDATA)>
<!ATTLIST Theta_value
Encoding CDATA #REQUIRED>
<!ELEMENT alpha_values (alpha*)>
<!ELEMENT alpha (#PCDATA)>
<!ATTLIST alpha
Encoding CDATA #REQUIRED>

<!-- Simple Shuffle Validity Proof Optimized
// <!ELEMENT SimpleShuffleValidityProof (GValue, BigGamma, BigOmega, f_values, Theta_values, Theta_kp1, Theta_2k, alpha_values)>
// <!ELEMENT BigOmega (#PCDATA)>
// <!ATTLIST BigOmega
// Encoding CDATA #REQUIRED>
// <!ELEMENT Theta_values (Theta_value+)>
// <!ELEMENT Theta_value (#PCDATA)>
// <!ATTLIST Theta_value
// Encoding CDATA #REQUIRED>
// <!ELEMENT f_values (f_value+)>
// <!ELEMENT f_value (#PCDATA)>
// <!ATTLIST f_value
// Encoding CDATA #REQUIRED>
// <!ELEMENT Theta_kp1 (#PCDATA)>
// <!ATTLIST Theta_kp1
// Encoding CDATA #REQUIRED>
// <!ELEMENT Theta_2k (#PCDATA)>
// <!ATTLIST Theta_2k
// Encoding CDATA #REQUIRED -->

<!-- Signature -->
<!ELEMENT Signature (#PCDATA)>


<!-- SignedData -->
<!ELEMENT SignedData (#PCDATA)>


<!-- Signed Ballot Box -->
<!ELEMENT SignedBallotBox (#PCDATA)>


<!-- Signed Blank Ballot -->
<!ELEMENT SignedBlankBallot (SignedData, Signature+)>


<!-- Signed Election Parameters -->
<!ELEMENT SignedElectionParameters (CryptoElectionParameters,
                                    KeyShareCommitment+, Signature+)>


<!-- Signed Vote Receipt Data -->
<!ELEMENT SignedVoteReceiptData (SignedData, Signature)>


<!-- Signed Voted Ballot -->
<!ELEMENT SignedVotedBallot (SignedData, Signature)>


<!-- Signed Voted Ballots -->
<!ELEMENT SignedVotedBallots (SignedVotedBallot*)>


<!-- SigningPrivateKey -->
<!ELEMENT SigningPrivateKey (#PCDATA)>


<!-- SigningPublicKey -->
<!ELEMENT SigningPublicKey (#PCDATA)>


<!-- Trustee Dictionary Commitments -->
<!ELEMENT TrusteeDictionaryCommitments (Authority, BlankBallot,
                                        BSNDictionaryCommitments+)>


<!-- Trustee Dictionary Commitments Set -->
<!ELEMENT TrusteeDictionaryCommitmentsSet (TrusteeDictionaryCommitments+)>


<!-- Trustee Revealed Dictionary Secrets -->
<!ELEMENT TrusteeRevealedDictionarySecrets (Authority, BlankBallot,
                                    BSNRevealedDictionarySecrets+)>


<!-- Trustee Revealed Dictionary Secrets Box -->
<!ELEMENT TrusteeRevealedDictionarySecretsBox (TrusteeRevealedDictionarySecrets*)>


<!-- Signed Trustee Dictionary Commitments -->
<!ELEMENT SignedTrusteeDictionaryCommitments (SignedData, Signature)>


<!-- Vote Receipt Data -->
<!ELEMENT VoteReceiptData (BallotSequenceNumber, VoteVerificationCodes)>
<!ATTLIST VoteReceiptData
SVBHash CDATA #REQUIRED>


<!-- Vote Verification Code -->
<!ELEMENT VoteVerificationCode (#PCDATA)>
<!ATTLIST VoteVerificationCode
Encoding CDATA #REQUIRED
QuestionReference CDATA #REQUIRED>


<!-- Vote Verification Codes -->
<!ELEMENT VoteVerificationCodes (VoteVerificationCode+)>


<!-- Vote Verification Dictionary  -->
<!ELEMENT VoteVerificationDictionary (BallotSequenceNumber, DictionaryQuestion+)>


<!-- Vote Verification Dictionaries  -->
<!ELEMENT VoteVerificationDictionaries (VoteVerificationDictionary*)>


<!-- Vote Verification Key -->
<!ELEMENT VoteVerificationKey (#PCDATA)>


<!-- Vote Verification Keys -->
<!ELEMENT VoteVerificationKeys (VoteVerificationKey+)>


<!-- Vote Verification Statement -->
<!ELEMENT VoteVerificationStatement (BallotSequenceNumber, VoteVerificationCode+)>


<!-- Vote Verification Statements -->
<!ELEMENT VoteVerificationStatements (VoteVerificationStatement*)>


<!-- Voted Ballot -->
<!ELEMENT VotedBallot (ElectionID, BallotSequenceNumber, RawVotedBallot)>
<!ATTLIST VotedBallot
BBHash CDATA #REQUIRED>


<!-- Voter Roll -->
<!ELEMENT VoterRoll (Certificate*)>
